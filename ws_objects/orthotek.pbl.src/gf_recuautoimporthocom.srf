$PBExportHeader$gf_recuautoimporthocom.srf
global type gf_recuautoimporthocom from function_object
end type

forward prototypes
global subroutine gf_recuautoimporthocom (ref datastore dsstore, long al_idtrait, string as_langue, long al_patid, long al_idcont, date adt_start, date adt_end, boolean ab_papier)
end prototypes

global subroutine gf_recuautoimporthocom (ref datastore dsstore, long al_idtrait, string as_langue, long al_patid, long al_idcont, date adt_start, date adt_end, boolean ab_papier);long row,ll_idphase,ll_phase,ll_idcontact,ll_cpdonhand, ll_idtrait, ll_row, ll_month
long ll_rapppaie, ll_id, ll_idnextfact,ll_mois,ll_year
decimal{2} ld_totfact,ld_totpaie,ld_couttrait,ld_charge,ld_paie,ld_balreporte,ld_totcpd
string ls_phase,ls_nom,ls_prenom,ls_add,ls_ville,ls_prov,ls_zip,ls_tel,ls_resp, ls_modnextdate
string ls_day, ls_mod, ls_modal, ls_factnote1, ls_factnote2,ls_ty, ls_villepat, ls_addpat, ls_provpat, ls_zippat, ls_newdoss
date ldt_rdv, ldt_paiedate,ldt_nextdate
time lt_rdv
decimal{2} ld_facttot,ld_paietot,ld_factc,ld_paiec,ld_fact30,ld_paie30,ld_fact60,ld_paie60,ld_sumfact,ld_sumpaie
decimal{2} ld_recu,ld_solde,ld_montantdu,ld_current,ld_jour30,ld_jour60,ld_jour90
dec{2} ld_montant,ld_balcharge,ld_balpaie, ld_totpaieant, ld_totfactant, ld_nextdate

dsstore.reset()

if as_langue = 'A' then
	dsstore.object.t_title.text = "RECEIPT"
	dsstore.object.tt_mrecu.text = "Amount Received:"
	dsstore.object.tt_solde.text = "Contract Balance:"
	dsstore.object.tt_current.text = "Current"
	dsstore.object.t_30.text = "31-60 Days"
	dsstore.object.t_60.text = "61-90 Days"
	dsstore.object.t_90.text = "Over 90"
	dsstore.object.tt_mdu.text = "Amount now due"
	
	dsstore.object.tt_couttrait.text = "Treatment cost:"
	dsstore.object.tt_charge.text = "Total charged:"
	dsstore.object.tt_totpaie.text = "Total paid:"
	dsstore.object.tt_balance.text = "Contract balance:"
	dsstore.object.tt_balreporte.text = "Balance forward:"
	
	dsstore.object.tt_mdu1.text = "Amount now due:"
	dsstore.object.t_fact.text = "Charges"
	dsstore.object.t_paie.text = "Credits"
	dsstore.object.t_montantdu.text = "Amount due"
	dsstore.object.t_printedon.text = "Printed on"
	dsstore.object.tt_cpd.text = "Checks on hand"
	dsstore.object.t_date2.text = datean(today())
else
	dsstore.object.t_title.text = "REÇU"
	dsstore.object.tt_mrecu.text = "Montant reçu:"
	dsstore.object.tt_solde.text = "Solde restant:"
	dsstore.object.tt_current.text = "Courant"
	dsstore.object.t_30.text = "31-60 Jours"
	dsstore.object.t_60.text = "61-90 Jours"
	dsstore.object.t_90.text = "90 +"
	dsstore.object.tt_mdu.text = "Montant dû:"
	
	dsstore.object.tt_couttrait.text = "Coût traitement:"
	dsstore.object.tt_charge.text = "Total facturé:"
	dsstore.object.tt_totpaie.text = "Montant payé:"
	dsstore.object.tt_balance.text = "Solde:"
	dsstore.object.tt_balreporte.text = "Balance reporté:"
	
	dsstore.object.tt_mdu1.text = "Montant dû:"
	dsstore.object.t_fact.text = "Débit"
	dsstore.object.t_paie.text = "Crédit"
	dsstore.object.t_montantdu.text = "Montant dû"
	dsstore.object.t_printedon.text = "Imprimé le"
	dsstore.object.tt_cpd.text = "Chèques en main:"
	dsstore.object.t_date2.text = datefr(today())
end if

select id_phase,phase into :ll_idphase,:ll_phase from traitements where traitement_id = :al_idtrait;
select phase into :ls_phase from t_phase where id_phase = :ll_idphase;
dsstore.object.t_phase.text = ls_phase

select dr_nom_complet,dr_adresse,dr_ville,dr_province,dr_code_postal,dr_tel_bur
into :ls_nom,:ls_add,:ls_ville,:ls_prov,:ls_zip,:ls_tel 
from ortho_id where ortho_id = :v_no_ortho;

select isnull(sum(isnull(montant,0)),0) into :ld_totfact from factures_traitements where traitement_id = :al_idtrait;
//charged to date
select isnull(sum(isnull(montant,0)),0) into :ld_charge from factures_traitements where date_facture <= today() and traitement_id = :al_idtrait;
dsstore.object.t_totcharge.text = string(ld_charge) + '$'
//paid to date
select isnull(sum(isnull(montant_recu,0)),0) into :ld_paie from paiement where date_paiement <= today() and traitement_patient_id = :al_idtrait;
dsstore.object.t_totpaie.text = string(ld_paie) + '$'
//balance forward
//select isnull(sum(isnull(montant,0)),0) into :ld_charge from factures_traitements where date_facture < :ldt_start and traitement_id = :al_idtrait;
//select isnull(sum(isnull(montant_recu,0)),0) into :ld_paie from paiement where date_paiement < :ldt_start and traitement_patient_id = :al_idtrait;
//cpd on hand
select isnull(sum(isnull(paiement,0)),0),count(*) into :ld_totcpd,:ll_cpdonhand from cheques_postdates where isnull(indicateur,'0') <> '1' and traitement_patient_id = :al_idtrait;
if as_langue = 'A' then
	dsstore.object.tt_cpd.text = 'Postdated checks:'
	dsstore.object.t_cpd.text = string(ll_cpdonhand) + ' Checks ' + string(ld_totcpd) + ' $'
else
	dsstore.object.t_cpd.text = string(ll_cpdonhand) + ' Chèques ' + string(ld_totcpd) + ' $'
end if

//ld_balreporte = ld_charge - ld_paie
//dsstore.object.t_balreporte.text = string(0.00) + ' $'

select montant_original into :ld_couttrait from traitements where traitement_id = :al_idtrait;
dsstore.object.t_couttrait.text = string(ld_couttrait) + ' $'

select isnull(sum(isnull(montant_recu,0)),0) into :ld_totpaie from paiement where traitement_patient_id = :al_idtrait;

//dw_invoice.object.t_totpaye.text = string(ld_totpaie) + ' $'
dsstore.object.t_balance.text = string(ld_totfact - ld_totpaie) + ' $'

boolean lb_hideinvoiceheader

select hideinvoiceheader 
into :lb_hideinvoiceheader 
from t_options
where ortho_id = :v_no_ortho;

if not lb_hideinvoiceheader or ab_papier = false then
	dsstore.object.t_specnom.text = ls_nom
	dsstore.object.t_specadd.text = ls_add
	dsstore.object.t_specville.text = ls_ville + ' (' + ls_prov + ')'
	dsstore.object.t_speczip.text = string(ls_zip,'@@@ @@@')
	dsstore.object.t_spectel.text = string(ls_tel, '(@@@) @@@-@@@@')
end if

select patient_nom,patient_prenom,id_contact,adresse,ville,province,code_postale, isnull(new_dossier,'')
into :ls_nom,:ls_prenom,:ll_idcontact,:ls_addpat,:ls_villepat,:ls_provpat,:ls_zippat,:ls_newdoss
from patient where patient_id = :al_patid;

if not isnull(al_idcont) then
	ll_idcontact = al_idcont
end if

select prenom + ' ' + nom,adresse,ville,province,zip
into :ls_resp,:ls_add,:ls_ville,:ls_prov,:ls_zip 
from t_contact where id_contact = :ll_idcontact;

if isnull(ls_add) then ls_add = ls_addpat
if isnull(ls_ville) then ls_ville = ls_villepat
if isnull(ls_prov) then ls_prov = ls_provpat
if isnull(ls_zip) then ls_zip = ls_zippat

dsstore.object.t_resp.text = ls_resp
dsstore.object.t_patnom.text = 'Re : ' + ls_prenom + ', ' + ls_nom + ' ( ' + ls_newdoss + ' )'
dsstore.object.t_patadd.text = ls_add
dsstore.object.t_patcity.text = ls_ville + ' (' + ls_prov + ')'
dsstore.object.t_patzip.text = string(ls_zip,'@@@ @@@')

//next appointment
  SELECT FIRST t_rdv.rdvdate ,
		   t_rdv.rdvheure
	 INTO :ldt_rdv,:lt_rdv
    FROM	t_rdv
   WHERE t_rdv.rdvdate > today() AND
			t_rdv.patient_id = :al_patid AND
			(t_rdv.rdvetat is null or t_rdv.rdvetat <> 'c')
ORDER BY t_rdv.rdvdate ASC;

if ldt_rdv = date('1900-01-01') or isnull(ldt_rdv) then
	if as_langue = 'A' then
		dsstore.object.t_nextapp.text = 'You do not have a future appointment'
	else
		dsstore.object.t_nextapp.text = "Vous n'avez pas de prochain rendez-vous"
	end if
else
	if as_langue = 'A' then
		dsstore.object.t_nextapp.text = 'Your next appointment is : ' + dayname(ldt_rdv) + ', ' + string(ldt_rdv) + ' ' + string(lt_rdv)
	else
		choose case DayName(ldt_rdv)
			case "Monday"
				ls_day = "Lundi"
			case "Tuesday"
				ls_day = "Mardi"
			case "Wednesday"
				ls_day = "Mercredi"
			case "Thursday"
				ls_day = "Jeudi"
			case "Friday"
				ls_day = "Vendredi"
			case "Saturday"
				ls_day = "Samedi"
			case "Sunday"
				ls_day = "Dimanche"
			end choose
		dsstore.object.t_nextapp.text = 'Prochain rendez-vous : ' + ls_day + ', ' + string(ldt_rdv) + ' ' + string(lt_rdv)
	end if
end if

if as_langue = 'A' then
	ls_ty = 'Payment - Thank you'
else
	ls_ty = 'Paiement - Merci'
end if

//insert balance forward
//select isnull(sum(isnull(montant,0)),0) into :ld_balcharge from factures_traitements where traitement_id = :al_idtrait;
//select isnull(sum(isnull(montant_recu,0)),0) into :ld_balpaie from paiement where traitement_patient_id = :al_idtrait;
//ld_balreporte = ld_balcharge - ld_balpaie
//
//ll_row = dsstore.insertRow(0)
//dsstore.setItem(ll_row,'datepaie',today())
//dsstore.setitem(ll_row,'charges',ld_balreporte)
//dsstore.setitem(ll_row,'charges',0)
//if as_langue = 'an' then
//	dsstore.setitem(ll_row,'mod','Balance forward')
//else
//	dsstore.setitem(ll_row,'mod','montant restant')
//end if
//dsstore.setitem(ll_row,'id',0)
//
select rapppaie into :ll_rapppaie from t_options where ortho_id = :v_no_ortho;


// Calculer le balance forward de la date demandée

ll_mois = month(adt_start)
ll_year = year(adt_start)
//ldt_datecour = date(year(adt_start),month(adt_start),1)

select isnull(sum(isnull(montant_recu,0)),0) into :ld_totpaieant 
from paiement 
where traitement_patient_id = :al_idtrait and
		date_paiement < :adt_start and
		id_contact = :ll_idcontact;

SELECT isnull(sum(isnull(factures_traitements.montant,0)),0) into :ld_totfactant
FROM factures_traitements  
WHERE factures_traitements.traitement_id = :al_idtrait and
		date_facture < :adt_start and
		id_contact = :ll_idcontact;

if isnull(ld_totpaieant) then ld_totpaieant = 0
if isnull(ld_totfactant) then ld_totfactant = 0
		
ll_row = dsstore.insertRow(0)
dsstore.setItem(ll_row,'datepaie',adt_start)
dsstore.setItem(ll_row,'invoiceorpayment','i')
dsstore.setitem(ll_row,'charges',ld_totfactant - ld_totpaieant)
if as_langue = 'A' then
	dsstore.setitem(ll_row,'mod','Balance forward')
else
	dsstore.setitem(ll_row,'mod','montant restant')
end if
dsstore.setitem(ll_row,'id',0)
		
// Prendre les information de la prochaine facture

//DECLARE listfact CURSOR FOR
//	SELECT  	isnull(factures_traitements.montant,0),
//				factures_traitements.date_facture
//		 FROM factures_traitements  
//		WHERE factures_traitements.traitement_id = :al_idtrait and
//				month(factures_traitements.date_facture) = :ll_mois and 
//				year(factures_traitements.date_facture) = :ll_year and
//				id_contact = :ll_idcontact;
//				
//OPEN listfact;
//
//FETCH listfact INTO  :ld_nextdate, :ldt_nextdate;
//
//DO WHILE SQLCA.SQLCode = 0 
//			
//	if ld_nextdate > 0 then
//		ll_row = dsstore.insertRow(0)
//		dsstore.setItem(ll_row,'datepaie',ldt_nextdate)
//		dsstore.setItem(ll_row,'invoiceorpayment','i')
//		dsstore.setitem(ll_row,'charges',ld_nextdate)
//		if as_langue = 'A' then
//			dsstore.setitem(ll_row,'mod','Monthly charge')
//		else
//			dsstore.setitem(ll_row,'mod','Mensualité')
//		end if
//		dsstore.setitem(ll_row,'id',ll_row)
//	end if
//
//	FETCH listfact INTO  :ld_nextdate, :ldt_nextdate;
//
//LOOP
//
//CLOSE listfact;

DECLARE listpaie CURSOR FOR

 SELECT factures_traitements.facture_id,
  			factures_traitements.date_facture,
  			factures_traitements.montant,
			(select description from t_status where t_status.status_id = factures_traitements.status_id) as status
	 FROM factures_traitements  
   WHERE factures_traitements.traitement_id = :al_idtrait and
			factures_traitements.date_facture between :adt_start and :adt_end
			
	UNION
	
  SELECT paiement.paiement_id,
  			paiement.date_paiement,   
         paiement.montant_recu,   
         paiement.paiement
    FROM paiement  
   WHERE paiement.traitement_patient_id = :al_idtrait and
			paiement.date_paiement >= :adt_start
	
	UNION
	
  SELECT cheques_postdates.cheques_postdates_id,
  			cheques_postdates.date_cheque,
  			cheques_postdates.paiement,
			cheques_postdates.modalite
	 FROM cheques_postdates
   WHERE cheques_postdates.traitement_patient_id = :al_idtrait and
			cheques_postdates.indicateur <> '1' and
			cheques_postdates.date_cheque <= :adt_end;
	
OPEN listpaie;

FETCH listpaie INTO :ll_id,:ldt_paiedate,:ld_montant,:ls_mod;
							  
DO WHILE SQLCA.SQLCode = 0
	ll_row = dsstore.insertRow(0)
	dsstore.setItem(ll_row,'datepaie',ldt_paiedate)
	dsstore.setItem(ll_row,'invoiceorpayment',gf_invoice_or_payment(ls_mod))
	if gf_invoice_or_payment(ls_mod) = 'p' then
		if ld_montant <> 0.00 then
			dsstore.setitem(ll_row,'credits',ld_montant)
		end if
		if ls_mod = 'NSF' or ls_mod = 'credit' or ls_mod = 'trans' or ls_mod = 'perte' or ls_mod = 'A' or ls_mod = 'mod' then
			dsstore.setitem(ll_row,'mod',gf_method1(as_langue,ls_mod))
		else
			dsstore.setitem(ll_row,'mod',gf_method1(as_langue,ls_mod) + ', ' + ls_ty)
		end if
		ll_id = ll_id + 999999 //a la fin du tri
	else
		if ld_montant <> 0.00 then
			dsstore.setitem(ll_row,'charges',ld_montant)
		end if
		dsstore.setitem(ll_row,'mod',gf_method1(as_langue,ls_mod))
	end if
	dsstore.setitem(ll_row,'id',ll_id)
	FETCH listpaie INTO :ll_id,:ldt_paiedate,:ld_montant,:ls_mod;
LOOP

CLOSE listpaie;

//ajouter les notes
select factnote1,factnote2 into :ls_factnote1, :ls_factnote2 from t_options where ortho_id = :v_no_ortho;
dsstore.object.t_factnote1.text = ls_factnote1
dsstore.object.t_factnote2.text = ls_factnote2
dsstore.setSort("id A")
dsstore.sort()

SELECT   (select isnull(sum(isnull(montant,0)),0) from factures_traitements where traitement_id = :al_idtrait and days(date_facture,today()) >= 0) as facttot,
			(select isnull(sum(isnull(montant_recu,0)),0) from paiement where traitement_patient_id = :al_idtrait and days(date_paiement,today()) >= 0) as paietot,
	      (select isnull(sum(isnull(montant,0)),0) from factures_traitements where traitement_id = :al_idtrait and days(date_facture, today()) > 0) as factc,
			(select isnull(sum(isnull(montant_recu,0)),0) from paiement where traitement_patient_id = :al_idtrait and days(date_paiement, today()) > 0) as paiec
	INTO	:ld_facttot,:ld_paietot,:ld_factc,:ld_paiec
	FROM 	traitements
  WHERE  traitements.traitement_id = :al_idtrait;
  
select isnull(sum(isnull(montant,0)),0) into :ld_sumfact from factures_traitements where traitement_id = :al_idtrait;
select isnull(sum(isnull(montant_recu,0)),0) into :ld_sumpaie from paiement where traitement_patient_id = :al_idtrait;
select isnull(sum(isnull(montant_recu,0)),0) into :ld_recu from paiement where traitement_patient_id = :al_idtrait;
if isnull(ld_fact30) then ld_fact30 = 0
if isnull(ld_paie30) then ld_paie30 = 0
if isnull(ld_fact60) then ld_fact60 = 0
if isnull(ld_paie60) then ld_paie60 = 0
ld_solde = ld_sumfact - ld_sumpaie
ld_montantdu = ld_facttot - ld_paietot
ld_jour90 = ld_fact60 - ld_paie60
ld_jour60 = ld_fact60 - ld_paie60 - ld_jour90
ld_jour30 = ld_factc - ld_paiec - ld_jour60 - ld_jour90
ld_current = ld_montantdu - ld_jour30 - ld_jour60 - ld_jour90

dsstore.object.t_solde.text = string(ld_solde) + ' $'
dsstore.object.t_mrecu.text = string(ld_recu) + ' $'
dsstore.object.t_mdu.text = string(ld_montantdu) + ' $'
dsstore.object.t_mdu1.text = string(ld_montantdu) + ' $'
dsstore.object.t_current.text = string(ld_current) + ' $'
dsstore.object.t_day30.text = string(ld_jour30) + ' $'
dsstore.object.t_day60.text = string(ld_jour60) + ' $'
dsstore.object.t_day90.text = string(ld_jour90) + ' $'
end subroutine

